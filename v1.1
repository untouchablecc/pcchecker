import os
import json
import requests
import logging

# Define paths and webhooks
log_file_path = 'C:\\Users\\%USERNAME%\\AppData\\Roaming\\MyPythonScript\\scan_log.txt'
webhook_url = 'https://canary.discord.com/api/webhooks/1279148419193114694/l4pr5CEMMlD4LDsZ9_plYFSfTgWCVvWqXCN9Gri6XVq8bRL55GZtgNZXGOU1TrY34SCV'

# Setup logging
logging.basicConfig(filename=log_file_path, level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def log_message(message, level='INFO'):
    if level == 'ERROR':
        logging.error(message)
    elif level == 'WARNING':
        logging.warning(message)
    elif level == 'INFO':
        logging.info(message)
    else:
        logging.info(message)
    print(message)  # Print to console for real-time feedback

def send_webhook(content):
    try:
        response = requests.post(webhook_url, json={"content": content})
        response.raise_for_status()
    except requests.RequestException as e:
        log_message(f"Failed to send webhook: {str(e)}", 'ERROR')

def scan_folders(path):
    log_message(f"Scanning directory: {path}", 'INFO')
    found_traces = False
    try:
        for root, dirs, files in os.walk(path):
            for file in files:
                if any(proc in file.lower() for proc in ['lghub', 'spotify', 'razercortex', 'razersynapse', 'chrome', 'tiktok', 'voicemeeterpro', 'brave']):
                    found_traces = True
                    trace_path = os.path.join(root, file)
                    log_message(f"Found trace: {trace_path}", 'WARNING')
    except Exception as e:
        log_message(f"Error scanning {path}: {str(e)}", 'ERROR')

    if not found_traces:
        log_message("No traces found in this directory.", 'INFO')

def main():
    log_message("Starting scan...")
    scan_folders('C:\\')  # Start scan from root
    log_message("Scan complete.")
    send_webhook("Scan complete. Please check the results.")

if __name__ == '__main__':
    main()
