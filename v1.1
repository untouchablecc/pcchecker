import os
import requests
import ctypes
from datetime import datetime
import psutil
import platform

# Webhooks
WEBHOOKS = {
    'process_traces': 'https://canary.discord.com/api/webhooks/1279148419193114694/l4pr5CEMMlD4LDsZ9_plYFSfTgWCVvWqXCN9Gri6XVq8bRL55GZtgNZXGOU1TrY34SCV',
}

# Directories to scan
DIRECTORIES_TO_SCAN = [
    "C:\\",
    "C:\\Users\\%USERNAME%\\AppData\\Local",
    "C:\\Users\\%USERNAME%\\AppData\\Roaming"
]

# Target processes
TARGET_PROCESSES = [
    "LGHUB", "TikTokLIVEStudio", "voicemeeterpro", "grave",
    "RazerCortex", "RazerSynapse", "spotify", "steam", "chrome"
]

def send_webhook_message(webhook_url, message):
    try:
        response = requests.post(webhook_url, json={"content": message})
        response.raise_for_status()
    except requests.exceptions.RequestException as e:
        print(f"Failed to send webhook: {e}")

def scan_for_processes():
    found_processes = []
    for proc in psutil.process_iter(['pid', 'name', 'cmdline', 'username']):
        try:
            if proc.info['name'] in TARGET_PROCESSES:
                found_processes.append(proc.info)
        except (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):
            pass
    return found_processes

def scan_directory(directory):
    found_files = []
    for root, dirs, files in os.walk(directory):
        for file in files:
            filepath = os.path.join(root, file)
            if any(target in filepath for target in TARGET_PROCESSES):
                found_files.append(filepath)
    return found_files

def main():
    # Clear previous results
    if os.path.exists("results.txt"):
        os.remove("results.txt")

    # Scan for processes
    found_processes = scan_for_processes()
    if found_processes:
        for proc in found_processes:
            message = f"Found process: {proc['name']} (PID: {proc['pid']}, Command Line: {' '.join(proc['cmdline'])})"
            print(f"\033[33m{message}\033[0m")  # Yellow text for processes
            send_webhook_message(WEBHOOKS['process_traces'], message)
    else:
        print("\033[34mNo target processes found.\033[0m")  # Blue text for no processes found

    # Scan directories
    for directory in DIRECTORIES_TO_SCAN:
        directory = directory.replace("%USERNAME%", os.getlogin())  # Replace %USERNAME% with actual username
        print(f"Scanning through folder {directory}...")
        found_files = scan_directory(directory)
        if found_files:
            message = f"Found traces in {directory} - See results.txt for details."
            print(f"\033[31m{message}\033[0m")  # Red text for found traces
            send_webhook_message(WEBHOOKS['process_traces'], message)
            with open("results.txt", "a") as file:
                for trace in found_files:
                    file.write(f"Trace found: {trace}\n")
        else:
            print(f"\033[32mScanning through folder {directory} - Clear\033[0m")  # Green text for clear

    print("Scanning complete.")
    send_webhook_message(WEBHOOKS['process_traces'], "Scanning complete. Check results.txt for details.")

if __name__ == "__main__":
    main()
