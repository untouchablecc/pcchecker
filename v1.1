import requests
import json
import sys
import time
import os
import sqlite3
from datetime import datetime

# Define webhook URLs
WEBHOOK_URLS = {
    '1': 'https://canary.discord.com/api/webhooks/1279137428371931248/eYRZf4HRZ5GmYXgLI_iRA5WiOhqVSFBDGn_ztg-oRrNrSWmdKq69WC0MX9P9nQuutQac',  # Processes
    '2': 'https://canary.discord.com/api/webhooks/1279407337618145310/A7fONuJnsWJLLCwkB2XlNKga0XeQwO6yq3HjWzhHt6hqzafunlxxeIO_dpebSN_DcunP',  # Database
    '3': 'https://canary.discord.com/api/webhooks/1279148419193114694/l4pr5CEMMlD4LDsZ9_plYFSfTgWCVvWqXCN9Gri6XVq8bRL55GZtgNZXGOU1TrY34SCV',  # Traces
    '4': 'https://canary.discord.com/api/webhooks/1279411390314057820/85pPrwRUCeX3EoLCexlHK0LOyAf9m9pRmRO3GIgZZMhMdm_gxAbMLWSE_0T6MXNhiWgK',  # Recent Activity
    '5': 'https://canary.discord.com/api/webhooks/1279188293438799902/S3ejH4YpQBv-7Yp4TfW8LCezK-UpzVxolIwdcX66uN-DQZ2DiXt-X2QdeL2mM9ky5Siz',  # Errors
    '6': 'https://canary.discord.com/api/webhooks/1279407392379109497/15w0yvCeqmb64b7NqPgtFL8ZRwmqjMb3G1H0Mu0NX4nBXnwqoWTLGogQOSBVS6_2CoC_'   # System Info
}

def send_webhook(url, title, description, color=0x00FF00):
    embed = {
        "embeds": [
            {
                "title": title,
                "description": description,
                "color": color
            }
        ]
    }
    try:
        response = requests.post(url, json=embed)
        response.raise_for_status()
        print(f"Successfully sent to webhook: {title}")
    except requests.RequestException as e:
        print(f"Failed to send webhook: {e}")

def scan_browser_history():
    # Placeholder function to simulate browser history scanning
    # You need to replace this with actual code to scan browser history
    return "Browser history results"

def scan_recent_activity():
    # Placeholder function to simulate recent activity scanning
    # You need to replace this with actual code to scan recent activity
    return "Recent activity results"

def get_processes():
    # Placeholder function to simulate process scanning
    # You need to replace this with actual code to get process information
    return "Process information"

def get_database_results():
    # Placeholder function to simulate database results
    # You need to replace this with actual code to get database results
    return "Database results"

def get_system_info():
    # Placeholder function to simulate system information
    # You need to replace this with actual code to get system information
    return "System information"

def scan_for_traces():
    # Placeholder function to simulate scanning for traces
    # You need to replace this with actual code to scan for traces
    return "Traces results"

def main():
    if len(sys.argv) != 3:
        print("Usage: python NiggaTool.py <option> <delay>")
        sys.exit(1)

    option = sys.argv[1]
    delay = int(sys.argv[2])
    webhook_url = WEBHOOK_URLS.get(option, None)

    if not webhook_url:
        print("Invalid option")
        sys.exit(1)

    result = ""
    if option == '1':  # Get Processes
        result = get_processes()
    elif option == '2':  # Get Database Results
        result = get_database_results()
    elif option == '3':  # Scan for Traces
        result = scan_for_traces()
    elif option == '4':  # Scan Recent Activity
        result = scan_recent_activity()
    elif option == '5':  # Errors
        result = "Errors information"
    elif option == '6':  # System Information
        result = get_system_info()

    if result:
        send_webhook(webhook_url, "Results", result)

    time.sleep(delay)

if __name__ == "__main__":
    main()
