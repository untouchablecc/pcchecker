import os
import sys
import json
import requests
import psutil
import datetime

# Webhook URLs
WEBHOOK_URLS = {
    'scan_results': 'https://your-webhook-url-for-scan-results',
    'error_report': 'https://your-webhook-url-for-error-reports'
}

def send_to_webhook(title, description, url):
    """Send data to a webhook with an embedded format."""
    embed = {
        "embeds": [
            {
                "title": title,
                "description": description,
                "color": 0x00FF00  # Green color
            }
        ]
    }
    try:
        response = requests.post(url, json=embed)
        response.raise_for_status()
        print(f"Embed sent to webhook: {title}")
    except requests.RequestException as e:
        print(f"Failed to send embed to webhook: {e}")

def find_specific_files(base_path, target_files):
    """Find and categorize specific files."""
    results = {
        'admin_processes': [],
        'open_processes': []
    }
    for root, dirs, files in os.walk(base_path):
        for file in files:
            file_path = os.path.join(root, file)
            if any(target_file in file_path for target_file in target_files):
                try:
                    process_info = get_process_info(file_path)
                    if process_info:
                        results['admin_processes'].append(process_info) if process_info['is_admin'] else results['open_processes'].append(process_info)
                except Exception as e:
                    print(f"Error processing file {file_path}: {e}")
    return results

def get_process_info(file_path):
    """Get information about a process from a file path."""
    for proc in psutil.process_iter(['pid', 'name', 'exe', 'cmdline']):
        if file_path in proc.info['cmdline']:
            return {
                'file_path': file_path,
                'process_name': proc.info['name'],
                'process_pid': proc.info['pid'],
                'is_admin': proc.as_dict(attrs=['uid'])['uid'] == 0,
                'cmdline': ' '.join(proc.info['cmdline']),
                'started': datetime.datetime.fromtimestamp(proc.create_time()).strftime('%Y-%m-%d %H:%M:%S')
            }
    return None

def scan_directory(base_path, target_files):
    """Scan directories and send results to webhook."""
    print(f"Scanning directory: {base_path}")
    results = find_specific_files(base_path, target_files)
    results_summary = json.dumps(results, indent=2)
    send_to_webhook("PC Deep Scan Results", results_summary, WEBHOOK_URLS['scan_results'])
    print("Scan completed.")

def main():
    if len(sys.argv) < 2:
        print("Usage: script.py [options]")
        sys.exit(1)

    option = sys.argv[1]

    if option == '--scan':
        target_files = [
            'steam.exe',
            'Spotify.exe',
            'RazerCortex.exe',
            'Razer Synapse 3.exe',
            'lghub.exe',
            'chrome.exe',
            'TikTok LIVE Studio.exe',
            'voicemeeterpro.exe',
            'brave.exe'
        ]
        try:
            scan_directory('C:\\', target_files)
        except Exception as e:
            send_to_webhook("Error Report", f"Exception occurred: {e}", WEBHOOK_URLS['error_report'])
            print(f"Error during scan: {e}")
    else:
        print("Invalid option")
        sys.exit(1)

if __name__ == "__main__":
    main()
